name: Deploy to Fly.io

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

jobs:
  deploy:
    name: Deploy Backstage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Flyctl
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Run Health Check (Pre-deployment)
        run: |
          if flyctl status &>/dev/null; then
            echo "Running pre-deployment health check..."
            flyctl status --json | jq -e '.Instances[].Status == "running"' || exit 1
          else
            echo "First deployment - skipping health check"
          fi

      - name: Backup Database (if exists)
        run: |
          if flyctl status &>/dev/null; then
            echo "Creating database backup..."
            flyctl postgres backup
          else
            echo "First deployment - skipping backup"
          fi

      - name: Deploy to Fly.io
        run: flyctl deploy --remote-only

      - name: Post-deployment Health Check
        run: |
          echo "Waiting for deployment to stabilize..."
          sleep 30
          for i in {1..5}; do
            if curl -f "https://$(flyctl info --json | jq -r .Hostname)/health"; then
              echo "Health check passed!"
              exit 0
            fi
            echo "Attempt $i failed, retrying in 10s..."
            sleep 10
          done
          echo "Health check failed after 5 attempts"
          flyctl deploy rollback
          exit 1

      - name: Notify on Failure
        if: failure()
        run: |
          echo "Deployment failed! Rolling back..."
          flyctl deploy rollback 